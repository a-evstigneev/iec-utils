#!/bin/sh

. $IECDIR/config/iecenv
. $UTILS/service_utils

asduaddr=$1
type=$2

m_sp_tb_1=30
m_me_tf_1=36

reqvoltage=13 # required external power supply voltage

while read json; do
	case "$type" in
	"event" ) 
		event_type=$(echo "$json" | jq '.event' | jq 'if type=="array" then "array" else "string" end')
		[ "$event_type" = '"array"' ] && event=$(echo "$json" | jq '.event[0]')  || event=$(echo "$json" | jq '.event')
		case "$event" in
			'"event_power_on"' ) 
				objaddr=17 
				value=0 
				asdu_type=$m_sp_tb_1
			;;
			'"event_power_off"' ) 
				objaddr=17 
				value=1 
				asdu_type=$m_sp_tb_1
			;;
			'"event_input"' )
				objaddr=$(echo "$json" | jq '.event[1]')
				value=$(echo "$json" | jq '.event[2]' | awk '/false/ { $0 = 1; print }; /true/ { $0 = 0; print }')
				asdu_type=$m_sp_tb_1
			;;
			'"event_battery_low"' )
				objaddr=2
				value=$(echo "$json" | jq '.event[1]')
				asdu_type=$m_me_tf_1
				# Определить уровни battery_low
			;;
			'"event_temp_low"' | '"event_temp_normal"' | '"event_temp_high"' )
				objaddr=1
				value=$(echo "$json" | jq '.event[1]')
				asdu_type=$m_me_tf_1
			;;
		esac

		ts=$(get_pctstamp)
		printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$asdu_type" "$value" "-" "$ts"
	;;
	"info" ) 
		input_len=$(echo "$json" | jq ".Inputs | length")
		ts=$(get_pctstamp)

		for i in $(rangeconv 0-$(($input_len-1))); do
			value=$(echo "$json" | jq ".Inputs[$i].state")
			objaddr=$(echo "$json" | jq ".Inputs[$i].id")
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_sp_tb_1" "$value" "-" "$ts"
		done
		
		# Temperature status
		Temp=$(echo "$json" | jq ".sysinfo.sysinfo_temp")
		case "$Temp" in
		'null' )
			true
		;;
		* )
			objaddr=1 value="$Temp"
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_me_tf_1" "$value" "-" "$ts"
		;;
		esac

		# Battery status
		BatteryState=$(echo "$json" | jq ".sysinfo.sysinfo_bat[0]")
		BatteryCharge=$(echo "$json" | jq ".sysinfo.sysinfo_bat[1]")
		case "$BatteryState" in
		'"bat_ok"' )
			objaddr=18 value=0
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_sp_tb_1" "$value" "-" "$ts"
			objaddr=2 value="$BatteryCharge"
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_me_tf_1" "$value" "-" "$ts"
		;;
		'"bat_discharge_level1"' | '"bat_discharge_level2"' )
			objaddr=18 value=1
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_sp_tb_1" "$value" "-" "$ts"
			objaddr=2 value="$BatteryCharge"
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_me_tf_1" "$value" "-" "$ts"
		;;
		'"bat_not_used"' | '"bat_disconnected"' )
			objaddr=18 value=1
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_sp_tb_1" "$value" "-" "$ts"
			objaddr=2 value=0
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_me_tf_1" "$value" "-" "$ts"
		;;
		esac 
	
		# Power status
		Power=$(echo "$json" | jq ".sysinfo.sysinfo_ext_pwr" )
		case "$Power" in
		'null' )
			objaddr=17 value=1
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_sp_tb_1" "$value" "-" "$ts"
			objaddr=3 value=0
			printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_me_tf_1" "$value" "-" "$ts"
		;;
		* )
			Power=$(echo "scale=2; ${Power}/1" | bc)
			case $(echo "$reqvoltage < $Power" | bc) in
			"1" ) 
				objaddr=17 value=0
				printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_sp_tb_1" "$value" "-" "$ts"
				objaddr=3 value="$Power"
				printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_me_tf_1" "$value" "-" "$ts"
			;;
			"0" )
				objaddr=17 value=1
				printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_sp_tb_1" "$value" "-" "$ts"
				objaddr=3 value="$Power"
				printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$m_me_tf_1" "$value" "-" "$ts"
			;;
			esac
		;;
		esac

	;;
	esac
done 
