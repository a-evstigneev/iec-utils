putqueue()
{
	local file="$1"
	local cts rest dropmsg inode

	while read cts rest; do
		dropmsg="$VARDIR/$cts/work/drop/dropmsg"

		if cp "$file" "$dropmsg" 2>/dev/null && sync "$dropmsg" 2>/dev/null; then
			inode="$VARDIR/$cts/work/drop/$(stat -c %i $dropmsg)"
			if mv "$dropmsg" "$inode" 2>/dev/null && sync "$inode" 2>/dev/null; then
				printf "1" > $VARDIR/$cts/work/trigger 2>/dev/null # Trigger activation for each instance quemngr
				logmsgtime "File $file was written synchronously in $inode"
			else
				rm "$inode" 2>/dev/null
				logmsgtime "Сoping file $file to file $inode is failed"
			fi
	    else
			rm "$dropmsg" 2>/dev/null   
			logmsgtime "Сoping file $file to file "$dropmsg" is failed"
		fi
	done <<-EOF
		$(cat "$CTS" | grep -v '^#' | sed '/^$/d')
	EOF
}

putdbarch()
{
	local file="$1"
	local asduaddr rest archmsg

	read asduaddr rest <"$file"
	archmsg=$DB_ARCH/$asduaddr/$(/bin/date '+%G-%m-%d_%H:%M:%S')_$(mktemp -u "XXXXXX")
	if cp "$file" "$archmsg" 2>/dev/null && sync "$archmsg" 2>/dev/null; then
		logmsgtime "Copying file $file to file $archmsg was done"
	else
		logmsgtime "Copying file $file to file $archmsg failed"
	fi
}

putdbact()
{
	local file="$1"
	local asduasddr objaddr type value qds timestamp

	while read asduaddr objaddr type value qds timestamp; do
		case "$type" in
			30)
				type=1
			;;
			36) 
				type=13
			;;
		esac
		
		[ -d "$DB_ACT/$asduaddr/$type" ] || mkdir -p "$DB_ACT/$asduaddr/$type"
		echo "$value" "$qds" > "$DB_ACT/$asduaddr/$type/$objaddr"
		sync "$DB_ACT/$asduaddr/$type/$objaddr"
	done <"$file"

	logmsgtime "Copying file $file to dir $DB_ACT was done"
}

setdbact_qds()
{
	local asduaddr flags path
	asduaddr=$1
	flags=$2

	if ! [ -z "$(find "$DB_ACT/$asduaddr" -type f -printf "%P\n" | grep -v "1000")" ]; then
		while read filename; do
			sed -i "s/-/${flags}/g" "$DB_ACT/$asduaddr/$filename" 	
		done <<-EOF
			$(find "$DB_ACT/$asduaddr" -type f -printf "%P\n" | grep -v "1000")
		EOF
	fi
}

tmsig_send()
{
	local asduaddr objaddr type value ts
    asduaddr=$1
	objaddr=$2
	type=$3
	value=$4
    ts=$(get_pctstamp)

    archdir="$DB_ARCH/$asduaddr"
    [ -d "$archdir" ] || mkdir -p "$archdir"

	tmpfile=$(mktemp -u -p $archdir tmptm.XXXXXX)
    [ -f "$tmpfile" ] && rm "$tmpfile" 2>/dev/null

    printf '%s %s %s %s %s %s\n' "$asduaddr" "$objaddr" "$type" "$value" "-" "$ts" > "$tmpfile"

	if sync "$tmpfile" 2>/dev/null; then
		putqueue  "$tmpfile"
		putdbact  "$tmpfile"
		putdbarch "$tmpfile"
		rm "$tmpfile" 2>/dev/null
	else
		rm "$tmpfile" 2>/dev/null
	fi
}
