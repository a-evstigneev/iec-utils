#!/bin/sh

. $IECDIR/config/iecenv # VARDIR, RUNDIR, LOGDIR, SMSDROPDIR, CTS, GSMDEV

# Required components
test -x $IECDIR/quemngr || exit 1
test -x $IECDIR/asdusend || exit 1
test -x $IECDIR/asduconv || exit 1
test -x $IECDIR/sockwrite || exit 1
test -x $IECDIR/iecproxy || exit 1
test -x $IECDIR/ieclink || exit 1
test -x $IECDIR/ginterrog || exit 1

tmpfile=$(mktemp -p $RUNDIR iecinit_childpids.XXXXXX)

sigterm()
{
	local pid 
	trap '' TERM CHLD
	
	kill -TERM "-$$" >/dev/null 2>&1

#	jobs -p >$tmpfile
#	while read pid; do
#		kill -s TERM $pid >/dev/null 2>&1
#	done <<-EOF
#		$(cat $tmpfile)
#	EOF

	trap '-' TERM CHLD
}

cleandir()
{
	rm -rf ${RUNDIR}/*
	exit 0
}

trap 'cleandir' EXIT
trap 'sigterm' TERM

while read cts_name cts_address cts_port; do
	mkdir -p "$LOGDIR/$cts_name"
	mkdir -p "$VARDIR/$cts_name/work/drop"
	mkdir -p "$VARDIR/$cts_name/work/fail"
	mkdir -p "$VARDIR/$cts_name/work/in"
	mkdir -p "$VARDIR/$cts_name/work/act"
	mkdir -p "$VARDIR/$cts_name/work/df/0h0m30s"
	mkdir -p "$VARDIR/$cts_name/work/df/0h0m45s"
	mkdir -p "$VARDIR/$cts_name/work/df/0h0m60s"
	
	quemngr \
		-n "$cts_name" \
		-w "$VARDIR/$cts_name/work" \
		-t "$VARDIR/$cts_name/work/trigger" \
		-s asdusend \
		-d 3 2>"$LOGDIR/$cts_name/quemngr.log" &
	
	sleep 3

	PID_NOTIFY=$! iecproxy \
		-u "$VARDIR/$cts_name/usocket" \
		-s "$cts_address" \
		-p "$cts_port" \
		-c ieclink \
		-g ginterrog \
		-l "$LOGDIR/$cts_name/" \
		-d 3 &

done <<-EOF
	$(cat "$CTS" | grep -v '^#' | sed '/^$/d')
EOF

# SMS processing service
if [ -c "$GSMDEV" ] && [ -x "$IECDIR/smsget"  ]; then
	stty raw -echo -F "$GSMDEV"
	smsget -d -F "$GSMDEV" 2>>"$LOGDIR/smsget.log"
	smsget -t 10 -g -F "$GSMDEV" 2>>"$LOGDIR/smsget.log" & 
fi

# Http-server-event processing service from CCUSERVER
if [ -x "$IECDIR/ccuserver_initpoll" ]; then
	[ -d "$LOGDIR/ccuserver" ] || mkdir -p "$LOGDIR/ccuserver" 2>/dev/null
	ccuserver_initpoll 2>>"$LOGDIR/ccuserver/ccuserver_initpoll.log" &
fi

# Http-server-event processing service from CCUPROXY
if [ -x "$IECDIR/ccuproxy_initpoll" ] && [ -x "$IECDIR/ccuproxy_eventget" ]; then
	[ -d "$LOGDIR/ccuproxy" ] || mkdir -p "$LOGDIR/ccuproxy" 2>/dev/null
	ccuproxy_initpoll # synchronization with devices
	ccuproxy_eventget 2>>"$LOGDIR/ccuproxy/ccuproxy_eventget.log" &
fi

# Rtu polling service
if [ -x "$IECDIR/cron_initpoll" ]; then
	cron_initpoll &
fi

wait
