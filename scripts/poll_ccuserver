#!/bin/sh

. $IECDIR/iecenv
. $UTILS/log_utils
. $UTILS/service_utils
. $UTILS/db_utils
. $UTILS/http_utils

asduaddr=$1
sleepsec=60

pollsec=1800
gipid=""

filelock="$DB_ACT/$asduaddr/${asduaddr}.lock"

ginterrog() 
{
	local time asduaddr
	asduaddr=$1
	time=$2
	
	while true; do
		sleep $time
		(
			flock 9
			response=$(get_state $asduaddr)
			json_parse "$asduaddr" "state" "$response"	
		) 9>$filelock
	done
}

link_ts=1000
link_status=-1
link_up=1
link_down=0

while true; do
	if response=$(get_state $asduaddr); then
		logmsgtime "Connection with $CCUSERVER server succeeded"
		link_status=$link_up && tm_send "$asduaddr" "$link_ts" 30 "$link_status"
		json_parse "$asduaddr" "state" "$response"  
		
		ginterrog $asduaddr $pollsec &
		childpid=$!
		
		listen_events $asduaddr | \
		sed -u -e '/^[[:space:]]*$/d' -e 's/^data:\(.*\)$/\1/' | \
		while read string; do 
			case "$string" in
			'{"Type":"Keepalive"}') 
				continue 
			;;
			'{"Type":"NewEvents"}') 
				if response=$(get_state $asduaddr); then
					logmsgtime "Event from $CCUSERVER Received"
					(
						flock 9
						listid=$(json_parse "$asduaddr" "events" "$response")  
					) 9>$filelock
					[ -n "$listid" ] && ack_events "$asduaddr" "$listid"
				else
					logmsgtime "Synchronization with $CCUSERVER server failed"
				fi
			;;
			'{"Type":"Close"}') 
				logmsgtime "Controller has disconnected. The channel will be closed." 
				break 
			;;
			*) 
				logmsgtime "Undefined data. The channel will be closed."
				break 
			;;
			esac
		done
	else
		logmsgtime  "Synchronization with $CCUSERVER server failed"
	fi

	if [ "$link_status" -ne "$link_down" ]; then
		link_status=$link_down && tm_send "$asduaddr" "$link_ts" 30 "$link_status"
		setdbact_qds "$asduaddr" "NT"
		[ -n "$childpid" ] && kill -TERM $childpid >/dev/null 2>&1 && childpid=""
	fi

	sleep "$sleepsec" 
done
