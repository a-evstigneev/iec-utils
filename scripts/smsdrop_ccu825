#!/bin/sh

. /opt/iecd/io_utils
. /opt/iecd/sms_utils
set_env IECDIR DB_ACT DB_ARCH

readvalue()
{
	local comaddr timestamp
	awk -v comaddr=$1 -v timestamp=$2 '
		BEGIN {
			FS = " "; COMADDR = comaddr; TIMESTAMP = timestamp 
			TYPE["M_SP_TB_1"] = 30
			TYPE["M_ME_TF_1"] = 36
			count = 0
		}
		
		{ 
			objaddr = 0
			value = 0
			
			gsub(/,/, ".", $0)

			if ( $0 ~ "^TC" ) { #TC1-TC16
				objaddr = substr($1, 3)
				value = $2
				type = TYPE["M_SP_TB_1"]
			}
			else if ( $0 ~ "POWER" ) { #TC17
				objaddr = 17
				if ($2 == "OK")
					value = 0
				else if ( $2 == "FAULT" )
					value = 1
				type = TYPE["M_SP_TB_1"]
			}
			else if ( $0 ~ "TEMPERAT" ) { # TI1
				objaddr = 1
				value = substr($2, 1, length($2)-1)
				type = TYPE["M_ME_TF_1"]
			}

			# Empty_data
			if ( objaddr == 0 )
				next
			
			printf("%s %s %s %s %s %s\n", COMADDR, objaddr, type, value, "-", TIMESTAMP)
			count += 1
		}
		
		END {
			if ( count = 0 )
				exit 2
		}	
	' 
}

comaddr=$1; dcs=$2; scts=$3; sms=$4

sms=$(smsdecode $dcs $sms)

savedir="$DB_ARCH/$comaddr"
[ -d "$savedir" ] || mkdir -p "$savedir"

tempfile="$savedir/tempfile"
[ -f $tempfile ] && rm $tempfile 2>/dev/null 

timestamp=$(gettimestamp $scts)

if iec_value=$(/usr/bin/printf '%s\n' "$sms" | readvalue "$comaddr" "$timestamp"); then
	cat - >> $tempfile <<-EOF
		$iec_value
	EOF
	
	if sync $tempfile; then
		# Create files that will store the signal values for a general interrogation
		while read _comaddr _objaddr _type _value _qds _timestamp; do
			case $_type in
				30)
					_type=1
				;;
				36)
					_type=13
				;;
			esac
			
			[ -d $DB_ACT/$_comaddr/$_type ] || mkdir -p $DB_ACT/$_comaddr/$_type
			echo $_value $_qds > $DB_ACT/$_comaddr/$_type/$_objaddr
			sync $DB_ACT/$_comaddr/$_type/$_objaddr
		done < $tempfile
	else
		exit 1
	fi
else
	exit 2
fi
