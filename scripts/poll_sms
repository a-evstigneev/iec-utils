#!/bin/sh

. $IECDIR/config/iecenv # GSMDEV, DEVLOCK, RTU
. $UTILS/log_utils
. $UTILS/io_utils
. $UTILS/sms_utils

TIMEWAIT=6

usage() 
{
    echo "Usage: $0 [-m mode -n phone_number -F gsm_device message]"
}

send_smstext()
{
	true
}

send_smspdu()
{
    local SCA="00" # Sim contains the number of the SCA
    local SB="01" # Service Byte. Bit mask 0 0 0 00 0 01
    local MR="00" # Message Reference field
    local DA="0B91" # Destination Address: 0B - 11 digits, 91 - type international
    local PID="00" # Protocol ID
    local DCS="08" # UCS2
    local UDL="" # User Data Length. For encoding UCS2 each byte is encoded by two. Length(smstext) * 2
    local number=$1
    local file=$2
    local smstext
    local response
    local UD
    local PDU

    read smstext

    DA=${DA}$(get_destaddr $number)
    UDL=$(dectohex $((2 * $(expr length "$smstext"))))
    UD=$(echo "$smstext" | ucs2encode)
    PDU=${SCA}${SB}${MR}${DA}${PID}${DCS}${UDL}${UD}
    TPDU_LEN=$(((${#PDU} - 2)/2))

    /usr/bin/printf '%b' "AT+CMGS=$TPDU_LEN\r" >$file
    sleep 1
    /usr/bin/printf '%b' "$PDU\x1A" >$file
    sleep 1

    response=""
    exec 3<$file
    response=$(at_readreply 3 60)
    
	if ! [ -z "$response" ]; then
        echo $response | grep -q "+CMGS" && logmsgtime "Sms was sent successfully"
    else
        logmsgtime "Sending the sms failed"
    fi
    exec 3<&-

    return 0
}

while getopts "m:n:F:" opt; do
    case $opt in
    m) mode=$OPTARG ;;
    n) number=$OPTARG ;;
    F) file=$OPTARG ;;  
    *) usage; exit ;;
    esac
done

shift $(($OPTIND - 1))

if [ -n "$number" ]; then
	[ -n "$file" ] || file=$GSMDEV

	if ! [ -c "$file" ]; then
		echo "File $file is not character device"
		usage
		exit 0
	fi

	[ -n "$mode" ] || mode="pdu"

	read smstext


	if cmdsend "$file" "AT+CREG?" response; then
		echo $response  | grep -q "0,1" && logmsgtime "GSM device $file is registered on the network"
	else
		logmsgtime "Device $file is not available now"
		exit 2
	fi
	sleep 1

	case "$mode" in
	"text" )
		(
			flock 9
			/usr/bin/printf '%s\n' "$smstext" | send_smstext "$number" "$file"
		) 9>$DEVLOCK
	;;
	"pdu" )
		(
			flock 9
			/usr/bin/printf '%s\n' "$smstext" | send_smspdu "$number" "$file"
		) 9>$DEVLOCK
	;;
	esac

	exit $?
fi

if cmdsend "$GSMDEV" "AT+CREG?" response; then
	echo "$response"  | grep -q "0,1" && logmsgtime "GSM device $GSMDEV is registered on the network"
else
	logmsgtime "Device $GSMDEV is not available now"
	exit 2
fi
sleep 1

while read rtu number type; do
	[ -n "$mode" ] || mode="pdu"

	case "$type" in
		"granit" ) smstext="" ;;
		"ccu825_sms" ) smstext="/12345678 test ins" ;;
		"verset" ) smstext="" ;;	
		* ) smstext="" ;;
	esac

	if [ -n "$smstext" ]; then
		case "$mode" in
		"text" )
			(
				flock 9
				/usr/bin/printf '%s\n' "$smstext" | send_smstext "$number" "$GSMDEV"
			) 9>$DEVLOCK
		;;
		"pdu" )
			(
				flock 9
				/usr/bin/printf '%s\n' "$smstext" | send_smspdu "$number" "$GSMDEV"
			) 9>$DEVLOCK
		;;
		esac
	else
		continue
	fi

done <"$RTU"
