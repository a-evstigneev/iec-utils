#!/bin/sh

. /opt/iecd/io_utils

tmpdir=$(mktemp -d /tmp/XXXXX.asdusend)
cts_name=$1
jobslist=${tmpdir}/jobslist
sendfiles=${tmpdir}/sendfiles

success="Transfer was successful"
fail="Transfer failed"
confirm="Ok"

sendfile()
{
	asduconv -c 3 $1 | sockwrite -s $VARDIR/$cts_name/usocket 
}

end_defque()
{
	printf '^\n' | sockwrite -s $VARDIR/$cts_name/usocket 
	logmsgtime "Receive signal SIGUSR2 from quemngr and send \"^\" to iecproxy" 
}

sigchld()
{
	local pid state code name
	
	trap '' CHLD
	jobs -l >${jobslist}
	while read pid state; do
		if test -z "$state" || /usr/bin/printf '%s' "$state" | grep -q '^Running\|^Stopped\|^Suspended'; then
			continue
		else
			case "$state" in
			Done*)
				code=$(/usr/bin/printf '%s\n' "$state" | sed -n 's|^Done(\([0-9]\+\))$|\1|p')
				test -z $code && code=0
				name=$(sed -n "s/$pid //p" $sendfiles)
				test -n "$name" && sed -i "/$pid/d" "$sendfiles"
				case "$code" in
				0) 
					/usr/bin/printf '%s\n' "$name $code $success" 
					logmsgtime "file $name was transferred successfully, return code 0" 
					;;
				2) 
					/usr/bin/printf '%s\n' "$name $code $fail" 
					logmsgtime "file $name was not transfered, return code 2" 
					;;
				3) 
					logmsgtime "all deferred messages were received by iecproxy, return code 3"
					;;
				*) 
					true 
					;;
				esac
				;;
			*)
				true
				;;
			esac
		fi
	done <<-EOF
		$(sed 's/^.* \([0-9].*\)/\1/' <$jobslist)	
	EOF
	trap 'sigchld' CHLD
}

trap 'sigchld' CHLD
trap 'end_defque' USR2
trap 'rm -rf ${tmpdir}; exit 0' TERM 

exec 2>$LOGDIR/${cts_name}/asdusend.log
while true; do 
	if read filename; then 
		/usr/bin/printf '%s\n' "$filename 1 $confirm"
		logmsgtime "File $filename from the quemngr is received"
		
		sendfile ./act/$filename & 
		logmsgtime "Send file ./act/$filename to iecproxy" 
		
		/usr/bin/printf '%s %s\n' $! $filename >>$sendfiles
	fi
done
