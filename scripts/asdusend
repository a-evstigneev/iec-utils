#!/bin/sh

. /opt/iecd/io_utils

success="Transfer was successful"
fail="Transfer failed"
confirm="Ok"
cts_name=$1

exec 2>$LOGDIR/${cts_name}/asdusend.log

if ! tmpdir=$(/bin/mktemp -d /tmp/asdusend.XXXXXXXXXX 2>/dev/null); then
	logmsgtime "Temporary directory /tmp/asdusend.XXXXXXXXX could not be created" 
else
	sync $tmpdir
	sync /tmp
fi

jobslist=${tmpdir}/jobslist
if ! touch $jobslist; then
	logmsgtime "File $jobslist could not be created" 
else
	sync $jobslist
	sync $tmpdir
fi

sendfiles=${tmpdir}/sendfiles
if ! touch $sendfiles; then
	logmsgtime "File $sendfiles could not be created" 
else
	sync $sendfiles
	sync $tmpdir
fi

sendfile()
{
	asduconv -c 3 $1 | sockwrite -d 3 -s $VARDIR/$cts_name/usocket 
}

end_defque()
{
	local status

	printf '^\n' | sockwrite -d 3 -s $VARDIR/$cts_name/usocket 
	status=$?
	logmsgtime "receive signal SIGUSR2 from quemngr (all deferred messages have been sent), send \"^\" to iecproxy" 
	logmsgtime "sockwrite return code $status" 
}

trap 'end_defque' USR2
trap 'rm -rf ${tmpdir}; exit 0' TERM 

while true; do 
	if read filename; then 
		/usr/bin/printf '%s\n' "$filename 1 $confirm"
		logmsgtime "File name $filename from quemngr received"
		
		sendfile ./act/$filename
		logmsgtime "Send file ./act/$filename to iecproxy" 
		
		status=$?
		case "$status" in
			0) 
				/usr/bin/printf '%s\n' "$filename $status $success" 
				logmsgtime "file $filename was transferred successfully, return code 0" 
			;;
			2) 
				/usr/bin/printf '%s\n' "$filename $status $fail" 
				logmsgtime "connection with CTS lost, return code 2" 
			;;
			3) 
				logmsgtime "all deferred messages have been sent, return code 3"
			;;
			*) 
				/usr/bin/printf '%s\n' "$filename $status $fail" 
				logmsgtime "file $filename was not delivered, return code ${status}"
			;;
		esac
	fi
done
