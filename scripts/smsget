#!/bin/sh

. /opt/iecd/io_utils
. /opt/iecd/sms_utils
set_env DEVLOCK RTU_LIST DB_ARCH

WAIT_NEXTPOLL=10
smslistdel=""
errmsg=""

usage() 
{
	echo "Usage: $0 [-idcgt] [-F DEVICE]"
	echo " "
	echo "  -i  Device information"
	echo "  -d  Device initialization"
	echo "  -c  Device check"
	echo "  -t	Time to sleep" 
	echo "  -g  Receiving messages from the device"
	echo "  -F  Name of gsm-device (example: /dev/ttyUSB0)"
	echo " "
}

smssep()
{
	local _line _listid _smsnum _comaddr _cts_name _inode
	local _id _stat _data _num _number _sp _date _sms _device _dropmsg _archivemsg _savedir

	_listid=""; _smsnum=0; _comaddr=""
	
	while read _line; do
		if echo "$_line" | grep -q 'OK'; then
			if [ $_smsnum -eq 0 ]; then
				_listid="empty"
			fi
			break
		elif echo "$_line" | grep -q 'ERROR'; then
			_listid="error"
			break
		fi
		
		IFS=":" read _id _num _dcs _scts _data <<-EOF
			$_line
		EOF

		logmsg "Read sms: id = \"$_id\", phone number = \"$_num\", data coding scheme = \"$(getencoding $_dcs)\", encoded text = \"$_data\""
		_comaddr=$(grep -q $_num $RTU_LIST && grep $_num $RTU_LIST | cut -d " " -f 1)

		if [ $_comaddr ]; then
			_device=$(grep $_num $RTU_LIST | cut -d " " -f 3)
			smsdrop $_device $_comaddr $_dcs $_scts $_data &
			
			wait %1
			
			case $? in
			0)
				logmsg "Sms id $_id was written synchronously to disk"
				_listid="${_listid}${_id} "
				_savedir="$DB_ARCH/$_comaddr" 
				
				# Trigger activation for each instance quemngr
				while read _cts_name rest; do
					_dropmsg="$VARDIR/$_cts_name/work/drop/dropmsg"
					
					cp $_savedir/tempfile $_dropmsg
					_inode="$VARDIR/$_cts_name/work/drop/$(stat -c %i $_dropmsg)"
					
					if sync "$_dropmsg"; then
						mv "$_dropmsg" "$_inode"; sync $_inode
					fi
					
					/usr/bin/printf "1" > $VARDIR/$_cts_name/work/trigger
				done <<-EOF
					$(cat $CTS_LIST | grep -v '^#' | sed '/^$/d')
				EOF
				
				_archive_msg=$_savedir/$(/bin/date '+%G-%m-%d_%H:%M:%S')_$(mktemp -u "XXXXXX")
				mv "$_savedir/tempfile" "$_archive_msg"; sync "$_archive_msg"
			;;
			1)
				logmsg "Synchronous recording to disk failed"
			;;
			2)
				logmsg "Sms message format is incorrect"
				_listid="${_listid}${_id} "
			;;
			esac
		else
			logmsg "Phone number $_num is not valid"
			_listid="${_listid}${_id} "
		fi
		
		_smsnum=$(($_smsnum + 1))
	done
	
	echo "$_listid"
}

devinit()
{
	local _dev _cmd _result
	_dev=$1

	for _cmd in 'AT+CSCS="UCS2"' "AT+CSMS=0" 'AT+CMGF=0' 'AT+CSDH=1' 'AT+CPMS="SM","SM","SM"' 'AT+CNMI=2,0,0,0,0'; do
		if rwdev $_dev "$_cmd" _result; then
			logmsg "$_cmd"
			logmsg "$_result"
		else
			return 1
		fi
	done
	
	return 0
}

devinfo()
{
	local _dev _cmd _result
	_dev=$1

	for _cmd in "AT#LSCRIPT" "AT+CREG?" "AT+CPIN?" "AT+CSQ" "AT+CREG?" "AT+COPS?"; do
		if rwdev $_dev "$_cmd" _result; then
			logmsg "$_cmd"
			logmsg "$_result"
		else
			return 1
		fi
	done
	
	return 0
}

if [ $# -eq 0 ]; then
	usage
	exit 0
fi

while getopts "cdghit:F:" opt; do
	case $opt in
	F) gsmdev=$OPTARG ;;
	i) info=1 ;;
	d) devinit=1 ;;
	g) get=1 ;;
	c) check=1 ;;
	t) sleeptime=$OPTARG ;;
	*) usage; exit ;;
	esac
done

shift $(($OPTIND - 1)) 

# Info about gsm-equipment
if [ $info ]; then
	logmsgtime "Information about $gsmdev"
	(
		flock 9
		if ! devinfo $gsmdev; then
			logmsgtime "Device $gsmdev is not available now"
			exit 1
		fi
	) 9>$DEVLOCK
	
	exit 0
fi

# Gsm device init
if [ $devinit ]; then
	logmsgtime "Gsm device $gsmdev initialization"
	(
		flock 9
		if ! devinit $gsmdev; then
			logmsgtime "Device $gsmdev is not available now"
			exit 1
		fi
	) 9>$DEVLOCK
	
	exit 0
fi

# Get sms from gsm-device
if [ $get ]; then
	while true; do
		(
			flock 9
			
			if [ -n "$errmsg" ]; then
				sendnotice "$errmsg" # Send a notification if the device is unavailable. Optional.

				errmsg=""
			fi
			
			logmsgtime "Get sms list from $gsmdev"
			
			if rwdev "$gsmdev" "AT+CMGL=4" response; then
				smsiddel=$(printf '%s\n' "$response" | smsparse | sort -n -t: -k 7 -k 6 -k 5,5 | smsjoin | sort -t: | smssep)

				case $smsiddel in
					"empty")
						logmsgtime "Sms list is empty"			
						;;
					"error")
						logmsgtime "Error was detected on the device $gsmdev"
						errmsg="Error was detected on the device $gsmdev"
						devinit $gsmdev	
						;;
					"undef")
						logmsgtime "Undefined string \"$response\" from device $gsmdev"	
						;;
					*)
						for i in $smsiddel; do
							if  rwdev "$gsmdev" "AT+CMGD=$i" reply; then
								logmsg "Delete sms id $i"
								logmsg "$reply"
							else
								logmsgtime "Device $gsmdev is not available"
								errmsg="Device $gsmdev is not available now"
								break
							fi
						done
						;;	
				esac

				smsiddel=""
			else
				logmsgtime "Device $gsmdev is not available now"
				errmsg="Device $gsmdev is not available now"
			fi
		) 9>$DEVLOCK

		sleep $WAIT_NEXTPOLL
		
		echo $errmsg
	done
fi
