#!/bin/sh

. $IECDIR/io_utils
. $IECDIR/sms_utils
. $IECDIR/iecenv #RTU, CTS, DB_ARCH, VARDIR, DEVLOCK, SMS_NEXTPOLL

usage() 
{
	echo "Usage: $0 [-idcgt -F gsm_device]"
	echo " "
	echo "  -i  Device information"
	echo "  -d  Device initialization"
	echo "  -c  Device check"
	echo "  -t	Time to sleep" 
	echo "  -g  Receiving messages from the device"
	echo "  -F  Name of gsm-device (example: /dev/ttyUSB0)"
	echo " "
}

smssep()
{
	local line id listid num dcs scts data dev 
	local inode dropmsg archmsg archdir
	local cts_name comaddr
	local smsnum=0

	while read line; do
		if echo "$line" | grep -q 'OK'; then
			if [ $smsnum -eq 0 ]; then
				listid="empty"
			fi
			break
		elif echo "$line" | grep -q 'ERROR'; then
			listid="error"
			break
		fi
		
		IFS=":" read id num dcs scts data <<-EOF
			$line
		EOF

		logmsg "Sms received: id = $id, phone number = $num, data coding scheme = $(get_encoding $dcs), encoded text = $data"
		comaddr=$(grep -q $num $RTU && grep $num $RTU | cut -d " " -f 1)

		if [ $comaddr ]; then
			dev=$(grep $num $RTU | cut -d " " -f 3)
			smsdrop $dev $comaddr $dcs $scts $data &
			
			wait %1
			
			case $? in
			0)
				listid="${listid}${id} "
				archdir="$DB_ARCH/$comaddr" 
				logmsg "Sms id $id was written synchronously to disk in $archdir/tempfile"
				
				while read cts_name rest; do
					dropmsg="$VARDIR/$cts_name/work/drop/dropmsg"

					if cp "$archdir/tempfile" "$dropmsg" 2>/dev/null && sync "$dropmsg" 2>/dev/null; then
						inode="$VARDIR/$cts_name/work/drop/$(stat -c %i $dropmsg)"
						if mv "$dropmsg" "$inode" 2>/dev/null && sync "$inode" 2>/dev/null; then
							printf "1" > $VARDIR/$cts_name/work/trigger # Trigger activation for each instance quemngr
							logmsg "File $archdir/tempfile was written synchronously in $inode"
						else
							rm "$inode" 2>/dev/null	
							logmsg "Сoping file $archdir/tempfile to file $inode is failed"
						fi
					else
						rm "$dropmsg" 2>/dev/null	
						logmsg "Сoping file $archdir/tempfile to file "$dropmsg" is failed"
					fi
				done <<-EOF
					$(cat $CTS | grep -v '^#' | sed '/^$/d')
				EOF
				
				archmsg=$archdir/$(/bin/date '+%G-%m-%d_%H:%M:%S')_$(mktemp -u "XXXXXX")
				if mv "$archdir/tempfile" "$archmsg" 2>/dev/null && sync "$archmsg" 2>/dev/null; then
					logmsg "Renaming file $archdir/tempfile to file $archmsg was done"
				else
					logmsg "Renaming file $archdir/tempfile to file $archmsg failed"
				fi
			;;
			1)
				logmsg "Synchronous recording to disk failed"
			;;
			2)
				logmsg "Sms message format is incorrect"
				listid="${listid}${id} "
			;;
			esac
		else
			logmsg "Phone number $_num is not valid"
			listid="${listid}${id} "
		fi
		
		smsnum=$(($smsnum + 1))
	done
	
	echo "$listid"
}

devinit()
{
	local cmd response
	local dev=$1

	for cmd in 'AT+CSCS="UCS2"' "AT+CSMS=0" 'AT+CMGF=0' 'AT+CSDH=1' 'AT+CPMS="SM","SM","SM"' 'AT+CNMI=2,0,0,0,0'; do
		if rwdev "$dev" "$cmd" response; then
			logmsg "$cmd"
			logmsg "$response"
			sleep 0.5
		else
			return 1
		fi
	done
	
	return 0
}

devinfo()
{
	local cmd response
	local dev=$1

	for cmd in "AT#LSCRIPT" "AT+CREG?" "AT+CPIN?" "AT+CSQ" "AT+CREG?" "AT+COPS?"; do
		if rwdev "$dev" "$cmd" response; then
			logmsg "$cmd"
			logmsg "$response"
			sleep 0.5
		else
			return 1
		fi
	done
	
	return 0
}

if [ $# -eq 0 ]; then
	usage
	exit 0
fi

while getopts "cdghit:F:" opt; do
	case $opt in
	F) gsmdev=$OPTARG ;;
	i) info=1 ;;
	d) devinit=1 ;;
	g) get=1 ;;
	c) check=1 ;;
	t) sleeptime=$OPTARG ;;
	*) usage; exit ;;
	esac
done

shift $(($OPTIND - 1)) 

# Info about gsm-equipment
if [ $info ]; then
	logmsgtime "Information about $gsmdev"
	(
		flock 9
		if ! devinfo $gsmdev; then
			logmsgtime "Device $gsmdev is not available now"
			exit 1
		fi
	) 9>$DEVLOCK
	
	exit 0
fi

# Gsm device init
if [ $devinit ]; then
	logmsgtime "Gsm device $gsmdev initialization"
	(
		flock 9
		if ! devinit $gsmdev; then
			logmsgtime "Device $gsmdev is not available now"
			exit 1
		fi
	) 9>$DEVLOCK
	
	exit 0
fi

# Get sms from gsm-device
if [ $get ]; then
	while true; do
		(
			flock 9
			
			logmsgtime "Get sms list from $gsmdev"
			if rwdev "$gsmdev" "AT+CMGL=4" response; then
				smslistid=$(printf '%s\n' "$response" | smsparse | sort -n -t: -k 7 -k 6 -k 5,5 | smsjoin | sort -t: | smssep)

				case $smslistid in
					"empty")
						logmsgtime "Sms list is empty"			
						;;
					"error")
						errmsg="Error was detected on the device $gsmdev"
						logmsgtime "$errmsg"
						devinit $gsmdev	
						;;
					"undef")
						logmsgtime "Undefined string \"$response\" from device $gsmdev"	
						;;
					*)
						logmsgtime "List of messages to delete $smsiddel"
						for i in $smslistid; do
							if  rwdev "$gsmdev" "AT+CMGD=$i" response; then
								logmsg "Delete sms id $i"
								logmsg "$response"
							else
								errmsg="Device $gsmdev is not available now"
								logmsgtime "$errmsg"
								break
							fi
						done
						;;	
				esac

				smslistid=""
			else
				errmsg="Device $gsmdev is not available now"
				logmsgtime "$errmsg"
			fi

			test -n "$errmsg" && sendnotice "$errmsg" # Send a notification if the device is unavailable. Optional.

		) 9>$DEVLOCK

		sleep $SMS_NEXTPOLL
	done
fi
