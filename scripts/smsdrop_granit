#!/bin/sh

. /opt/iecd/io_utils
. /opt/iecd/sms_utils
set_env IECDIR DB_ACT DB_ARCH

readvalue()
{
	local comaddr timestamp
	awk -v comaddr=$1 -v timestamp=$2 '
		BEGIN {
			FS =","; COMADDR = comaddr; TIMESTAMP = timestamp 
			TYPE["M_SP_TB_1"] = 30
			TYPE["M_ME_TF_1"] = 36
			
			OBJADDR["Zona1"] = 1; VALUE["Zona1"] = -1 
			OBJADDR["Zona2"] = 2; VALUE["Zona2"] = -1 
			OBJADDR["Zona3"] = 3; VALUE["Zona3"] = -1 
			OBJADDR["Zona4"] = 4; VALUE["Zona4"] = -1 
			OBJADDR["Akk"] 	 = 5; VALUE["Akk"]   = -1 
			OBJADDR["Set"]   = 6; VALUE["Set"]   = -1 
			OBJADDR["t="]    = 1; VALUE["t="]
		}
		
		{ 
			gsub(/\047/, "", $0)
			
			if ( ( $0 ~ /Vzayty na ohrany/ ) || ( $0 ~ /Snayty s ohrany/ ) )
				exit 2
			if ( $0 !~ /.*Zona.:.*Akk.*Set.*t=.*gradus C/ )
				exit 2
			
			gsub(/ gradus C/, "", $0)
			
			for (i = 1; i <= NF; ++i) {
				for (field in OBJADDR) { 
					if ( $i ~ field ) {
						if ( $i ~ /norma/ )
							VALUE[field] = 0
						else if ( ( $i ~ /Neispravnost/ ) || ( $i ~ /Pogar/ ) || ( $i ~ /Trevoga/ ) )
							VALUE[field] = 1
						else if ( $i ~ /Net/ )
							VALUE[field] = 1
						else if ( $i ~ /t=/ ) 
							VALUE[field] = substr($i, index($i, "=") + 1)
						
					}
				}
			}
			
			for (field in OBJADDR) 
				if ( ( field == "t=" ) && ( VALUE[field] != "" ) )
					printf("%s %s %s %s %s %s\n", COMADDR, OBJADDR[field], TYPE["M_ME_TF_1"], VALUE[field], "-", TIMESTAMP)
				else if ( VALUE[field] != -1 ) 
					printf("%s %s %s %s %s %s\n", COMADDR, OBJADDR[field], TYPE["M_SP_TB_1"], VALUE[field], "-", TIMESTAMP)
				
		}
	' 
}

comaddr=$1; dcs=$2; scts=$3; sms=$4

sms=$(smsdecode $dcs $sms)

savedir="$DB_ARCH/$comaddr/"
[ -d "$savedir" ] || mkdir -p "$savedir"

tempfile="$savedir/tempfile"
[ -f $tempfile ] && rm $tempfile 2>/dev/null 

timestamp=$(gettimestamp $scts)

if iec_value=$(/usr/bin/printf '%s\n' "$sms" | readvalue "$comaddr" "$timestamp"); then
	cat - >> $tempfile <<-EOF
		$iec_value
	EOF

	if sync $tempfile; then
   	# Create files that will store the signal values for a general interrogation
		while read _comaddr _objaddr _type _value _qds _timestamp; do
			case $_type in
				30)
					_type=1
				;;
				36)
					_type=13
				;;
			esac
			
			[ -d $DB_ACT/$_comaddr/$_type ] || mkdir -p $DB_ACT/$_comaddr/$_type
			echo $_value $_qds > $DB_ACT/$_comaddr/$_type/$_objaddr
			sync $DB_ACT/$_comaddr/$_type/$_objaddr
		done < $tempfile
	else
		exit 1
	fi
fi
